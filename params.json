{"name":"Npm proxy","tagline":"Script to allow for dependency free private npm repositories. (NodeJS,Perl)","body":"npm\\_proxy\r\n==========\r\n\r\nHave your private npm repo, and diskspace too!\r\n\r\nnpm\\_proxy background\r\n=====================\r\n\r\nWith the ever expanding disk requirements of the public npm repository\r\nand the issues with constantly replicating the database (replication\r\nstopping for no apparent reason, bandwidth limitations.. etc ),\r\nsomething needed to be done.\r\n\r\nEnter npm\\_proxy.\r\n\r\nnpm\\_proxy runs from squid proxy using the \"url_rewrite_program\" option. \r\n\r\nWhen it sees a http request for registry.npmjs.org, it fires of a LWP\r\nrequest to that URL, if the URL returns 200, squid will process the\r\nconnection normally. If the LWP request sees a 404, it will re-write \r\nthe URL to point it at an internal couchdb.  This allows for pushing of \r\nyour private npm packages to your internal repo with out having to have \r\nall the dependent packages installed as well.\r\n\r\nUsage\r\n=====\r\n\r\nSay we have a package \"potatosausage\" that only exists in our private\r\nrepo:\r\n\r\n````\r\nnpm install potatosausage\r\n - > squid sees the package potatosausage doesn't exist on npmjs.org\r\n - > squid sends a redirect to internal repo\r\n - > npm continues along its happy way\r\n````\r\n\r\n\r\nSquid3 Config\r\n=============\r\n\r\n````\r\nurl_write_program /usr/local/bin/npm_proxy.pl\r\n````\r\n\r\nNPMRC\r\n=====\r\n\r\n````\r\nregistry = http://registry.npmjs.org\r\nproxy = http://proxyserver:3128\r\n````\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}